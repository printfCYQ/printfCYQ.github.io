<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="2021/04/07/hello-world/"/>
      <url>2021/04/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code>hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> es6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现太空船动画</title>
      <link href="2019/09/05/CSS-%E5%A4%AA%E7%A9%BA%E8%88%B9%E5%8A%A8%E7%94%BB/"/>
      <url>2019/09/05/CSS-%E5%A4%AA%E7%A9%BA%E8%88%B9%E5%8A%A8%E7%94%BB/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><h1 id="CSS-实现太空船动画"><a href="#CSS-实现太空船动画" class="headerlink" title="CSS-实现太空船动画"></a>CSS-实现太空船动画</h1><h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;   &lt;link rel=&quot;stylesheet&quot; href=&quot;index.css&quot;&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;spaceship&quot;&gt;        &lt;div class=&quot;spaceshipBody&quot;&gt;           &lt;div class=&quot;spaceshipTop&quot;&gt;&lt;/div&gt;           &lt;div class=&quot;spaceshipWindows&quot;&gt;              &lt;span&gt;&lt;/span&gt;              &lt;span&gt;&lt;/span&gt;           &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&quot;spaceshipBottom&quot;&gt;           &lt;span&gt;&lt;/span&gt;           &lt;span&gt;&lt;/span&gt;           &lt;span&gt;&lt;/span&gt;        &lt;/div&gt;        &lt;div class=&quot;fire&quot;&gt;           &lt;span&gt;&lt;/span&gt;           &lt;span&gt;&lt;/span&gt;           &lt;span&gt;&lt;/span&gt;           &lt;div class=&quot;glow&quot;&gt;&lt;/div&gt;        &lt;/div&gt;     &lt;/div&gt;     &lt;div class=&quot;shadow&quot;&gt;&lt;/div&gt;     &lt;div class=&quot;buttons&quot;&gt;        &lt;button class=&quot;btnStart&quot;&gt;&lt;span&gt;start&lt;/span&gt;&lt;/button&gt;        &lt;button class=&quot;btnLaunch&quot;&gt;&lt;span&gt;launch&lt;/span&gt;&lt;/button&gt;        &lt;button disabled=&quot;disabled&quot; class=&quot;btnLand disable&quot;&gt;&lt;span&gt;land&lt;/span&gt;&lt;/button&gt;     &lt;/div&gt;       &lt;/body&gt;&lt;script src=&quot;index.js&quot;&gt;&lt;/script&gt;&lt;/html&gt;</code></pre><h2 id="index-css"><a href="#index-css" class="headerlink" title="index.css"></a>index.css</h2><pre><code>body &#123;    margin: 0;    padding: 0;    display: flex;    align-items: center;    justify-content: center;    height: 100vh;    width: 100%;    background-color: #0f1b31;  &#125;    .spaceship &#123;    width: 300px;    height: 300px;    display: flex;    justify-content: center;    align-items: center;    position: absolute;    transition: all 2s ease;    bottom: 130px;    animation: float 2s ease infinite alternate;  &#125;  @keyframes float &#123;    0% &#123;      transform: translateY(10px);    &#125;    100% &#123;      transform: translateY(0px);    &#125;  &#125;  .spaceship.launch &#123;    bottom: 120%;    animation: launch 3s ease;  &#125;  @keyframes launch &#123;    0% &#123;      bottom: 130px;      transform: translatex(2px);    &#125;    10% &#123;      transform: translatex(-2px);    &#125;    20% &#123;      transform: translatex(2px);    &#125;    30% &#123;      transform: translatex(-2px);    &#125;    60% &#123;      transform: translatex(0px);      bottom: 150px;    &#125;    100% &#123;      bottom: 120%;    &#125;  &#125;  .spaceship.land &#123;    bottom: 130px;    animation: land 3s ease;  &#125;  @keyframes land &#123;    0% &#123;      bottom: 120%;    &#125;    50% &#123;      bottom: 180px;    &#125;    100% &#123;      bottom: 130px;    &#125;  &#125;  .spaceship .spaceshipBody &#123;    width: 35%;    height: 80%;    background-color: white;    border-bottom-left-radius: 100%;    border-bottom-right-radius: 100%;    border-top-left-radius: 100%;    border-top-right-radius: 100%;    display: flex;    justify-content: center;    position: relative;    z-index: 1;    box-shadow: inset 0px -173px 0px -80px white, inset 0px -213px 0px -60px #e4e4e4;  &#125;  .spaceship .spaceshipBody:before &#123;    content: &quot;&quot;;    position: absolute;    width: calc(100% - 36px);    height: 42%;    background-color: inherit;    bottom: -30px;    transform: perspective(10em) rotateX(-50deg);    border-bottom-left-radius: 50px;    border-bottom-right-radius: 50px;    box-shadow: inset 0px -33px 0px 0px rgba(0, 0, 0, 0.1);  &#125;  .spaceship .spaceshipBody:after &#123;    content: &quot;&quot;;    position: absolute;    width: 45%;    height: 40px;    background-color: #f95959;    bottom: -20px;    transform: perspective(10em) rotateX(-50deg);    border-bottom-left-radius: 50px;    border-bottom-right-radius: 50px;    z-index: -1;  &#125;  .spaceship .spaceshipBody .spaceshipTop &#123;    width: 100%;    height: 240px;    border-radius: 100%;    overflow: hidden;    position: relative;    box-shadow: inset -12px 17px 0px -7px rgba(0, 0, 0, 0.15);  &#125;  .spaceship .spaceshipBody .spaceshipTop:before &#123;    content: &quot;&quot;;    background-color: #4ba3b7;    position: absolute;    width: 100%;    height: 100px;    left: calc(50% - 54%);    border-radius: 100%;    top: -55px;    border: 2px solid white;    box-shadow: inset -18px 56px 0px 3px rgba(0, 0, 0, 0.1), 0px 0px 0px 6px #f95959;  &#125;  .spaceship .spaceshipBody .spaceshipWindows &#123;    display: flex;    justify-content: center;    align-items: center;    width: 300px;    height: 300px;    position: absolute;  &#125;  .spaceship .spaceshipBody .spaceshipWindows span &#123;    background-color: #ace7ef;    box-shadow: inset -4px 4px 0px 0px rgba(0, 0, 0, 0.3), inset 0px 0px 0px 2px white;    border: 4px solid #f95959;    z-index: 2;    position: absolute;    border-radius: 100%;    overflow: hidden;  &#125;  .spaceship .spaceshipBody .spaceshipWindows span:before &#123;    position: absolute;    content: &quot;&quot;;    background-color: white;    width: 200%;    height: 100%;    transform: rotate(45deg);    opacity: 0.4;  &#125;  .spaceship .spaceshipBody .spaceshipWindows span:nth-child(1) &#123;    width: 30px;    height: 30px;    top: 23%;  &#125;  .spaceship .spaceshipBody .spaceshipWindows span:nth-child(1):before &#123;    top: 10px;    right: 0px;  &#125;  .spaceship .spaceshipBody .spaceshipWindows span:nth-child(2) &#123;    width: 45px;    height: 45px;    top: 40%;  &#125;  .spaceship .spaceshipBody .spaceshipWindows span:nth-child(2):before &#123;    top: 12px;    right: 0px;  &#125;  .spaceship .spaceshipBottom &#123;    display: flex;    justify-content: center;    align-items: center;    width: 300px;    height: 300px;    position: absolute;  &#125;  .spaceship .spaceshipBottom span &#123;    background-color: #4ba3b7;    border-radius: 10px;    position: absolute;    overflow: hidden;  &#125;  .spaceship .spaceshipBottom span:before &#123;    content: &quot;&quot;;    position: absolute;    background-color: white;    width: 2px;    height: 120%;    border-radius: 20px;  &#125;  .spaceship .spaceshipBottom span:nth-child(1) &#123;    width: 15px;    height: 80px;    z-index: 2;    bottom: 2%;    box-shadow: inset -5px -3px 0px 0px rgba(0, 0, 0, 0.18);  &#125;  .spaceship .spaceshipBottom span:nth-child(1):before &#123;    display: none;  &#125;  .spaceship .spaceshipBottom span:nth-child(2) &#123;    width: 50px;    height: 130px;    left: 32%;    bottom: 6%;    transform: perspective(10em) rotateX(60deg) translateZ(-1px);    box-shadow: inset -5px -3px 0px 0px rgba(0, 0, 0, 0.2);  &#125;  .spaceship .spaceshipBottom span:nth-child(2):before &#123;    left: 0px;    border-right: 2px solid #f95959;  &#125;  .spaceship .spaceshipBottom span:nth-child(3) &#123;    width: 50px;    height: 130px;    right: 32%;    bottom: 6%;    transform: perspective(10em) rotateX(60deg) translateZ(-1px);    box-shadow: inset -5px -3px 0px 0px rgba(0, 0, 0, 0.2);  &#125;  .spaceship .spaceshipBottom span:nth-child(3):before &#123;    right: 0px;    border-left: 2px solid #f95959;  &#125;  .spaceship .fire &#123;    display: flex;    justify-content: center;    align-items: center;    width: 300px;    height: 100px;    position: absolute;    bottom: -50px;  &#125;  .spaceship .fire.burn span &#123;    border-radius: 50px;    top: 0;    position: absolute;    background-color: #ffd460;    height: inherit;    animation: fire 0.8s ease infinite alternate;  &#125;  .spaceship .fire.burn span:nth-child(1) &#123;    width: 6px;    height: 40px;    left: 44%;    transform: translateY(27px);    box-shadow: inset 0px -7px 10px #ea5455, inset 0px -19px 10px #ffc175, 0px -7px 10px #ea5455;    animation-delay: 0.2s;  &#125;  .spaceship .fire.burn span:nth-child(1):after &#123;    position: absolute;    content: &quot;&quot;;    width: 4px;    height: 60%;    border-radius: 50px;    background-color: #ffd460;    bottom: 0;    transform: translate(8px, 15px);    box-shadow: inset 0px -5px 10px #ea5455, inset 0px -19px 10px #ffc175, 0px -7px 10px #ea5455;  &#125;  .spaceship .fire.burn span:nth-child(2) &#123;    width: 10px;    height: 60px;    left: calc(50% - 8px);    transform: translateY(35px);    box-shadow: inset 0px -10px 10px #ea5455, inset 0px -30px 10px #ffc175, 0px -7px 10px #ea5455;  &#125;  .spaceship .fire.burn span:nth-child(2):after &#123;    position: absolute;    content: &quot;&quot;;    width: 10px;    height: 100%;    border-radius: 10px;    background-color: #ffd460;    top: 0;    transform: translate(-6px, -25px);    box-shadow: inset 0px -5px 10px #ea5455, inset 0px -15px 10px #ffc175, 0px -7px 10px #ea5455;  &#125;  .spaceship .fire.burn span:nth-child(3) &#123;    width: 10px;    height: 40px;    right: 45%;    transform: translateY(27px);    box-shadow: inset 0px -5px 10px #ea5455, inset 0px -30px 10px #ffc175, 0px -7px 10px #ea5455;    animation-delay: 0.4s;  &#125;  .spaceship .fire.burn span:nth-child(3):after &#123;    position: absolute;    content: &quot;&quot;;    width: 6px;    height: 180%;    border-radius: 10px;    background-color: #ffd460;    top: 0;    transform: translate(-6px, -15px);    box-shadow: inset 0px -5px 10px #ea5455, inset 0px -20px 10px #ffc175, 0px -7px 10px #ea5455;  &#125;  @keyframes fire &#123;    0% &#123;      height: 10px;      bottom: 0;    &#125;      50% &#123;        top: 0;      &#125;      100% &#123;        height: 20px;        bottom: 0;      &#125;    &#125;  .spaceship .fire.burn .glow &#123;    position: absolute;    width: 0px;    height: 0px;    border-radius: 100%;    box-shadow: 0px 0px 50px 20px #ea5455;    opacity: 1;    animation: glow 0.8s ease infinite alternate;  &#125;  @keyframes glow &#123;    0% &#123;      box-shadow: 0px 0px 50px 20px #ea5455;    &#125;    100% &#123;      box-shadow: 0px 0px 50px 25px #ea5455;    &#125;  &#125;  .shadow &#123;    width: 150px;    height: 30px;    background-color: black;    position: absolute;    border-radius: 100%;    opacity: 0.2;    bottom: 80px;    z-index: -1;    animation: shadow 2s ease infinite alternate;    transition: all 0.5s ease;  &#125;  @keyframes shadow &#123;    0% &#123;      width: 150px;    &#125;    100% &#123;      width: 120px;    &#125;  &#125;  .buttons &#123;    position: absolute;    display: flex;    flex-direction: column;    justify-content: space-around;    top: 20px;    left: 20px;  &#125;  .buttons button &#123;    width: 100px;    height: 40px;    background-color: #4ba3b7;    border: 0;    margin: 8px;    color: white;    position: relative;    overflow: hidden;    font-size: 12px;    letter-spacing: 1px;    font-weight: 500;    text-transform: uppercase;    transition: all 0.3s ease;    cursor: pointer;    border-radius: 3px;  &#125;  .buttons button.active &#123;    background-color: #f95959;  &#125;  .buttons button.active:hover &#123;    letter-spacing: 1px;    color: white;    background-color: #bf4c4c;  &#125;  .buttons button.active:hover:before, .buttons button.active:hover:after &#123;    width: 0;  &#125;  .buttons button.active:hover span:before, .buttons button.active:hover span:after &#123;    height: 0;  &#125;  .buttons button.disable &#123;    background-color: grey;    opacity: 0.3;    cursor: auto;  &#125;  .buttons button.disable:hover &#123;    letter-spacing: 1px;    color: white;  &#125;  .buttons button.disable:hover:before, .buttons button.disable:hover:after &#123;    width: 0;  &#125;  .buttons button.disable:hover span:before, .buttons button.disable:hover span:after &#123;    height: 0;  &#125;  .buttons button:before &#123;    content: &quot;&quot;;    position: absolute;    width: 0;    height: 2px;    background-color: #ace7ef;    transition: all 0.4s ease;    left: 0;    top: 0;  &#125;  .buttons button:after &#123;    content: &quot;&quot;;    position: absolute;    width: 0;    height: 2px;    background-color: #ace7ef;    transition: all 0.4s 0.2s ease;    right: 0;    bottom: 0;  &#125;  .buttons button span &#123;    width: 100%;    height: 100%;    position: absolute;    left: 0;    top: 0;    display: flex;    align-items: center;    justify-content: center;  &#125;  .buttons button span:before &#123;    content: &quot;&quot;;    position: absolute;    width: 2px;    height: 0;    background-color: #ace7ef;    transition: all 0.4s 0.3s ease;    left: 0;    top: 0;  &#125;  .buttons button span:after &#123;    content: &quot;&quot;;    position: absolute;    width: 2px;    height: 0;    background-color: #ace7ef;    transition: all 0.4s 0.4s ease;    right: 0;    bottom: 0;  &#125;  .buttons button:hover &#123;    color: #ace7ef;    letter-spacing: 2px;  &#125;  .buttons button:hover:before, .buttons button:hover:after &#123;    width: 100%;  &#125;  .buttons button:hover span:before, .buttons button:hover span:after &#123;    height: 100%;  &#125;  .buttons button:active &#123;    outline: none;    border: none;  &#125;  .buttons button:focus &#123;    outline: 0;  &#125;  </code></pre><h2 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h2><pre><code>var spaceship = document.querySelector(&quot;.spaceship&quot;),    fire = document.querySelector(&quot;.fire&quot;),    btnLaunch = document.querySelector(&quot;.btnLaunch&quot;),    btnLand = document.querySelector(&quot;.btnLand&quot;),    btnStart = document.querySelector(&quot;.btnStart&quot;),    txtLaunch = document.querySelector(&quot;.btnLaunch span&quot;),    txtLand = document.querySelector(&quot;.btnLand span&quot;),    txtStart = document.querySelector(&quot;.btnStart span&quot;),    shadow = document.querySelector(&quot;.shadow&quot;);btnLaunch.addEventListener(&quot;click&quot;, launch);btnLand.addEventListener(&quot;click&quot;, land);btnStart.addEventListener(&quot;click&quot;, start);function launch() &#123;   btnStart.classList.add(&quot;disable&quot;);   fire.classList.add(&quot;burn&quot;);   spaceship.classList.remove(&quot;land&quot;);   spaceship.classList.add(&quot;launch&quot;);   spaceship.removeEventListener(&quot;animationend&quot;, burn);   shadow.style.opacity = &quot;0&quot;;   /*buttons*/   btnLaunch.classList.add(&quot;active&quot;);   btnStart.disabled = true;   btnStart.classList.remove(&quot;active&quot;);   btnLand.classList.remove(&quot;active&quot;);   btnLand.classList.remove(&quot;disable&quot;);   btnLand.disabled = false;   /*text buttons*/   txtLaunch.innerText = &quot;launched!&quot;;   txtStart.innerText = &quot;start&quot;;   txtLand.innerText = &quot;land&quot;;&#125;function land() &#123;   spaceship.classList.remove(&quot;launch&quot;);   spaceship.classList.add(&quot;land&quot;);   spaceship.addEventListener(&quot;animationend&quot;, burn);     /*buttons*/   btnLaunch.classList.remove(&quot;active&quot;);   btnLand.classList.add(&quot;active&quot;);   btnStart.classList.remove(&quot;disable&quot;);   btnStart.disabled = false;   /*text buttons*/   txtLand.innerText = &quot;landed!&quot;;   txtLaunch.innerText = &quot;launch&quot;;&#125;function burn() &#123;   fire.classList.remove(&quot;burn&quot;);   spaceship.classList.remove(&quot;land&quot;);   shadow.style.opacity = &quot;0.2&quot;;   /*buttons*/   btnLand.classList.remove(&quot;active&quot;);   btnLand.classList.add(&quot;disable&quot;);   btnLand.disabled = true;   /*text buttons*/   txtLand.innerText = &quot;land&quot;;&#125;function start() &#123;   if (btnStart.classList.contains(&quot;active&quot;)) &#123;      fire.classList.remove(&quot;burn&quot;);      btnStart.classList.remove(&quot;active&quot;);      txtStart.innerText = &quot;start&quot;;   &#125; else &#123;      fire.classList.add(&quot;burn&quot;);      btnStart.classList.add(&quot;active&quot;);      txtStart.innerText = &quot;stop&quot;;      btnLand.classList.remove(&quot;active&quot;);   &#125;&#125;function stop() &#123;   fire.classList.remove(&quot;burn&quot;);&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现2048小游戏</title>
      <link href="2019/09/05/JS-2048%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
      <url>2019/09/05/JS-2048%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><h1 id="JS-实现2048小游戏"><a href="#JS-实现2048小游戏" class="headerlink" title="JS-实现2048小游戏"></a>JS-实现2048小游戏</h1><h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;    &lt;script src=&quot;index.js&quot;&gt;&lt;/script&gt;    &lt;link href=&quot;index.css&quot; rel=&quot;stylesheet&quot; /&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;my2048&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="index-css"><a href="#index-css" class="headerlink" title="index.css"></a>index.css</h2><pre><code>body, div, span, a &#123;    margin: 0;    padding: 0;&#125;#my2048 &#123;    margin-left: auto;    margin-right: auto;    margin-top: 300px;    position: relative;    background: #bbada0;&#125;#my2048 div &#123;    position: absolute;    display: inline-block;    border: 0px;&#125;</code></pre><h2 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h2><pre><code>var my2048;var rows = 4;var cols = 4;var squareWidth = 100;var spacing = 12;var boardSet = [];var squareSet = [];var valueMap = [];var colorMapping = &#123;&quot;0&quot;: &quot;#ccc0b3&quot;, &quot;2&quot;: &quot;#eee4da&quot;, &quot;4&quot;: &quot;#ede0c8&quot;, &quot;8&quot;: &quot;#f2b179&quot;, &quot;16&quot;: &quot;#f59563&quot;, &quot;32&quot;: &quot;#f67e5f&quot;, &quot;64&quot;: &quot;#f65e3b&quot;, &quot;128&quot;: &quot;#edcf72&quot;, &quot;256&quot; : &quot;#edcc61&quot;, &quot;512&quot;: &quot;#9c0&quot;, &quot;1024&quot;: &quot;#33b5e5&quot;, &quot;2048&quot;: &quot;#09c&quot;, &quot;4096&quot;: &quot;#5b67ff&quot;&#125;;var directionEnum = &#123;left:&#123;x:-1, y:0, key:&quot;left&quot;&#125;, right:&#123;x:1, y:0, key:&quot;left&quot;&#125;, top:&#123;x:0, y:-1, key:&quot;top&quot;&#125;, down:&#123;x:0, y:1, key:&quot;top&quot;&#125;&#125;;var lock = true;var isChange = false;function move(direction) &#123;    if (isOver()) &#123;        alert(&quot;game over ~!&quot;);        return;    &#125;    var newSquareSet = analysisActions(direction);    //收尾(保证最终一致性)    setTimeout(function () &#123;        refresh(newSquareSet);        if (isChange) &#123;            randGenerateSquare();        &#125;        lock = true;        isChange = false;    &#125;, 300);&#125;function analysisActions(direction) &#123;    var newSquareSet = generateNullMap();    if (direction == directionEnum.left) &#123;//向左        console.log(&quot;向左&quot;);        for (var i = 0 ; i &lt; squareSet.length ; i ++) &#123;            var temp = [];            for (var j = 0 ; j &lt; squareSet[i].length ; j ++) &#123;                if (squareSet[i][j] != null) &#123;                    temp.push(squareSet[i][j]);                &#125;            &#125;            temp = getNewLocation(temp);            for (var k = 0 ; k &lt; newSquareSet[i].length ; k ++) &#123;                if (temp[k]) &#123;                    newSquareSet[i][k] = temp[k];                &#125;            &#125;        &#125;    &#125; else if (direction == directionEnum.right) &#123;//向右        console.log(&quot;向右&quot;);        for (var i = 0 ; i &lt; squareSet.length ; i ++) &#123;            var temp = [];            for (var j = squareSet[i].length - 1 ; j &gt;= 0 ; j --) &#123;                if (squareSet[i][j] != null) &#123;                    temp.push(squareSet[i][j]);                &#125;            &#125;            temp = getNewLocation(temp);            for (var k = newSquareSet[i].length - 1 ; k &gt;= 0 ; k --) &#123;                if (temp[newSquareSet[i].length - 1 - k]) &#123;                    newSquareSet[i][k] = temp[newSquareSet[i].length - 1 - k];                &#125;            &#125;        &#125;    &#125; else if (direction == directionEnum.top) &#123;//向前        console.log(&quot;向前&quot;);        for (var j = 0 ; j &lt; squareSet[0].length ; j ++) &#123;            var temp = [];            for (var i = 0 ; i &lt; squareSet.length ; i ++) &#123;                if (squareSet[i][j] != null) &#123;                    temp.push(squareSet[i][j]);                &#125;            &#125;            temp = getNewLocation(temp);            for (var k = 0 ; k &lt; newSquareSet.length ; k ++) &#123;                if (temp[k]) &#123;                    newSquareSet[k][j] = temp[k];                &#125;            &#125;        &#125;    &#125; else &#123;//向后        console.log(&quot;向后&quot;);        for (var j = 0 ; j &lt; squareSet[0].length ; j ++) &#123;            var temp = [];            for (var i = squareSet.length - 1 ; i &gt;= 0 ; i --) &#123;                if (squareSet[i][j] != null) &#123;                    temp.push(squareSet[i][j]);                &#125;            &#125;            temp = getNewLocation(temp);            for (var k = newSquareSet.length - 1 ; k &gt;= 0 ; k --) &#123;                if (temp[newSquareSet.length - 1 - k]) &#123;                    newSquareSet[k][j] = temp[newSquareSet.length - 1 - k];                &#125;            &#125;        &#125;    &#125;    //动画    for (var i = 0 ; i &lt; newSquareSet.length ; i ++) &#123;        for (var j = 0 ; j &lt; newSquareSet[i].length ; j ++) &#123;            if (newSquareSet[i][j] == null) &#123;                continue;            &#125;            newSquareSet[i][j].style.transition = direction.key + &quot; 0.3s&quot;;            newSquareSet[i][j].style.left = (j + 1) * spacing + j * squareWidth + &quot;px&quot;;            newSquareSet[i][j].style.top = (i + 1) * spacing + i * squareWidth + &quot;px&quot;;            if(newSquareSet[i][j].nextSquare) &#123;                newSquareSet[i][j].nextSquare.style.transition = direction.key + &quot; 0.3s&quot;;                newSquareSet[i][j].nextSquare.style.left = (j + 1) * spacing + j * squareWidth + &quot;px&quot;;                newSquareSet[i][j].nextSquare.style.top = (i + 1) * spacing + i * squareWidth + &quot;px&quot;;            &#125;        &#125;    &#125;    return newSquareSet;&#125;function getNewLocation(arr) &#123;    if (arr.length == 0) &#123;        return [];    &#125;    var temp = [];    temp.push(arr[0]);    for (var i = 1 ; i &lt; arr.length ; i ++) &#123;        if (arr[i].num == temp[temp.length - 1].num &amp;&amp; (!temp[temp.length - 1].nextSquare || temp[temp.length - 1].nextSquare == null)) &#123;            temp[temp.length - 1].nextSquare = arr[i];        &#125; else &#123;            temp.push(arr[i]);        &#125;    &#125;    return temp;&#125;function generateNullMap () &#123;    var newValueMap = [];    for (var i = 0 ; i &lt; rows ; i ++) &#123;        newValueMap[i] = [];        for (var j = 0 ; j &lt; cols ; j ++) &#123;            newValueMap[i][j] = null;        &#125;    &#125;    return newValueMap;&#125;function isOver() &#123;    for (var i = 0 ; i &lt; squareSet.length ; i ++) &#123;        for (var j = 0 ; j &lt; squareSet[i].length ; j ++) &#123;            if (squareSet[i][j] == null) &#123;                return false;            &#125;            if (squareSet[i][j + 1] &amp;&amp; squareSet[i][j].num == squareSet[i][j + 1].num || squareSet[i + 1] &amp;&amp; squareSet[i + 1][j] &amp;&amp; squareSet[i][j].num == squareSet[i + 1][j].num)&#123;                return false;            &#125;        &#125;    &#125;    return true;&#125;function refresh(newSquareSet) &#123;//纠正位图，保证最终一致性    squareSet = generateNullMap();    var newValueMap = generateNullMap();    for (var i = 0 ; i &lt; rows ; i ++) &#123;        for (var j = 0 ; j &lt; cols ; j ++) &#123;            //新的存在则添加            if (newSquareSet[i][j]) &#123;                if (newSquareSet[i][j].nextSquare) &#123;                    var temp = createSquare(newSquareSet[i][j].num * 2, newSquareSet[i][j].offsetLeft, newSquareSet[i][j].offsetTop, i, j);                    squareSet[i][j] = temp;                    my2048.append(temp);                    my2048.removeChild(newSquareSet[i][j].nextSquare);                    my2048.removeChild(newSquareSet[i][j]);                &#125; else &#123;                    var temp = createSquare(newSquareSet[i][j].num, newSquareSet[i][j].offsetLeft, newSquareSet[i][j].offsetTop, i, j);                    squareSet[i][j] = temp;                    my2048.append(temp);                    my2048.removeChild(newSquareSet[i][j]);                &#125;                if (valueMap[i][j] != squareSet[i][j].num) &#123;                    isChange = true;                &#125;                newValueMap[i][j] = squareSet[i][j].num;            &#125; else &#123;                newValueMap[i][j] = 0;            &#125;        &#125;    &#125;    valueMap = newValueMap;&#125;function randSquareNum() &#123;    return Math.random() &gt;= 0.5 ? 4 : 2;&#125;function randGenerateSquare() &#123;    for (;;) &#123;        var randRow = Math.floor(Math.random() * rows);        var randCol = Math.floor(Math.random() * cols);        if (valueMap[randRow][randCol] == 0) &#123;            var temp = createSquare(randSquareNum(), randCol * squareWidth + (randCol + 1) * spacing, randRow * squareWidth + (randRow + 1) * spacing, randRow, randCol);            valueMap[temp.row][temp.col] = temp.num;            squareSet[temp.row][temp.col] = temp;            my2048.appendChild(temp);            return true;        &#125;    &#125;&#125;function createSquare(value, left, top, row, col) &#123;    var temp = document.createElement(&quot;div&quot;);    temp.style.width = squareWidth + &quot;px&quot;;    temp.style.height = squareWidth + &quot;px&quot;;    temp.style.left = left + &quot;px&quot;;    temp.style.top = top + &quot;px&quot;;    temp.style.background = colorMapping[value];    temp.style.lineHeight = squareWidth + &quot;px&quot;;    temp.style.textAlign = &quot;center&quot;;    temp.style.fontSize = 0.4 * squareWidth + &quot;px&quot;;    temp.num = value;    temp.row = row;    temp.col = col;    if (value &gt; 0) &#123;        temp.innerHTML = &quot;&quot; + value;    &#125;    return temp;&#125;function initBoard() &#123;    my2048 = document.getElementById(&quot;my2048&quot;);    my2048.style.width = cols * squareWidth + (cols + 1) * spacing + &quot;px&quot;;    my2048.style.height = rows * squareWidth + (rows + 1) * spacing + &quot;px&quot;;&#125;function init() &#123;    //初始化棋盘    initBoard();    for (var i = 0 ; i &lt; rows ; i ++)&#123;        boardSet[i] = [];        valueMap[i] = [];        squareSet[i] = [];        for (var j = 0 ; j &lt; cols ; j ++)&#123;            valueMap[i][j] = 0;            squareSet[i][j] = null;            boardSet[i][j] = createSquare(0, j * squareWidth + (j + 1) * spacing, i * squareWidth + (i + 1) * spacing, i, j);            my2048.appendChild(boardSet[i][j]);        &#125;    &#125;    //初始化方块    randGenerateSquare();    randGenerateSquare();    //添加事件    document.addEventListener(&quot;keydown&quot;, function(e) &#123;        if (!lock) return;        lock = false;        switch (e.key) &#123;            case &quot;ArrowUp&quot;: move(directionEnum.top);break;            case &quot;ArrowDown&quot;: move(directionEnum.down);break;            case &quot;ArrowLeft&quot;: move(directionEnum.left);break;            case &quot;ArrowRight&quot;: move(directionEnum.right);break;            default : &#123;                lock = true;            &#125;        &#125;    &#125;);&#125;window.onload = function () &#123;    init();&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文字时钟</title>
      <link href="2019/09/05/JS-%E6%8A%96%E9%9F%B3%E5%BE%88%E7%81%AB%E7%9A%84%E6%96%87%E5%AD%97%E6%97%B6%E9%92%9F/"/>
      <url>2019/09/05/JS-%E6%8A%96%E9%9F%B3%E5%BE%88%E7%81%AB%E7%9A%84%E6%96%87%E5%AD%97%E6%97%B6%E9%92%9F/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><h1 id="JS-文字时钟"><a href="#JS-文字时钟" class="headerlink" title="JS-文字时钟"></a>JS-文字时钟</h1><h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;link rel=&quot;stylesheet&quot; href=&quot;index.css&quot;&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;clock&quot;&gt;&lt;/div&gt;    &lt;script src=&quot;index.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="index-css"><a href="#index-css" class="headerlink" title="index.css"></a>index.css</h2><pre><code>*&#123;    margin:0;    padding:0;&#125;html,body&#123;    width:100%;    height:100%;    background-color: #000;    overflow: hidden;&#125;#clock &#123;    position: relative;    width: 100%;    height: 100%;    background: black;&#125;.label&#123;    display:inline-block;    color:#4d4d4d;    text-align: center;    padding:0 5px;    font-size:19px;    transition:left 1s,top 1s;    transform-origin: 0% 0%;&#125;</code></pre><h2 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h2><pre><code>var monthText = [&quot;一月&quot;, &quot;二月&quot;, &quot;三月&quot;, &quot;四月&quot;, &quot;五月&quot;, &quot;六月&quot;, &quot;七月&quot;, &quot;八月&quot;, &quot;九月&quot;, &quot;十月&quot;, &quot;十一月&quot;, &quot;十二月&quot;];var dayText = [&quot;一号&quot;, &quot;二号&quot;, &quot;三号&quot;, &quot;四号&quot;, &quot;五号&quot;, &quot;六号&quot;, &quot;七号&quot;, &quot;八号&quot;, &quot;九号&quot;, &quot;十号&quot;, &quot;十一号&quot;, &quot;十二号&quot;, &quot;十三号&quot;, &quot;十四号&quot;, &quot;十五号&quot;, &quot;十六号&quot;, &quot;十七号&quot;, &quot;十八号&quot;, &quot;十九号&quot;, &quot;二十号&quot;, &quot;二十一号&quot;, &quot;二十二号&quot;, &quot;二十三号&quot;, &quot;二十四号&quot;, &quot;二十五号&quot;, &quot;二十六号&quot;, &quot;二十七号&quot;, &quot;二十八号&quot;, &quot;二十九号&quot;, &quot;三十号&quot;, &quot;三十一号&quot;];var weekText = [&quot;星期日&quot;, &quot;星期一&quot;, &quot;星期二&quot;, &quot;星期三&quot;, &quot;星期四&quot;, &quot;星期五&quot;, &quot;星期六&quot;];var hourText = [&quot;零点&quot;, &quot;一点&quot;, &quot;两点&quot;, &quot;三点&quot;, &quot;四点&quot;, &quot;五点&quot;, &quot;六点&quot;, &quot;七点&quot;, &quot;八点&quot;, &quot;九点&quot;, &quot;十点&quot;, &quot;十一点&quot;, &quot;十二点&quot;, &quot;十三点&quot;, &quot;十四点&quot;, &quot;十五点&quot;, &quot;十六点&quot;, &quot;十七点&quot;, &quot;十八点&quot;, &quot;十九点&quot;, &quot;二十点&quot;, &quot;二十一点&quot;, &quot;二十二点&quot;, &quot;二十三点&quot;];var minuteText = [&quot;一分&quot;, &quot;二分&quot;, &quot;三分&quot;, &quot;四分&quot;, &quot;五分&quot;, &quot;六分&quot;, &quot;七分&quot;, &quot;八分&quot;, &quot;九分&quot;, &quot;十分&quot;,    &quot;十一分&quot;, &quot;十二分&quot;, &quot;十三分&quot;, &quot;十四分&quot;, &quot;十五分&quot;, &quot;十六分&quot;, &quot;十七分&quot;, &quot;十八分&quot;, &quot;十九分&quot;, &quot;二十分&quot;,    &quot;二十一分&quot;, &quot;二十二分&quot;, &quot;二十三分&quot;, &quot;二十四分&quot;, &quot;二十五分&quot;, &quot;二十六分&quot;, &quot;二十七分&quot;, &quot;二十八分&quot;, &quot;二十九分&quot;, &quot;三十分&quot;,    &quot;三十一分&quot;, &quot;三十二分&quot;, &quot;三十三分&quot;, &quot;三十四分&quot;, &quot;三十五分&quot;, &quot;三十六分&quot;, &quot;三十七分&quot;, &quot;三十八分&quot;, &quot;三十九分&quot;, &quot;四十分&quot;,    &quot;四十一分&quot;, &quot;四十二分&quot;, &quot;四十三分&quot;, &quot;四十四分&quot;, &quot;四十五分&quot;, &quot;四十六分&quot;, &quot;四十七分&quot;, &quot;四十八分&quot;, &quot;四十九分&quot;, &quot;五十分&quot;,    &quot;五十一分&quot;, &quot;五十二分&quot;, &quot;五十三分&quot;, &quot;五十四分&quot;, &quot;五十五分&quot;, &quot;五十六分&quot;, &quot;五十七分&quot;, &quot;五十八分&quot;, &quot;五十九分&quot;, &quot;六十分&quot;];var secondsText = [&quot;一秒&quot;, &quot;二秒&quot;, &quot;三秒&quot;, &quot;四秒&quot;, &quot;五秒&quot;, &quot;六秒&quot;, &quot;七秒&quot;, &quot;八秒&quot;, &quot;九秒&quot;, &quot;十秒&quot;,    &quot;十一秒&quot;, &quot;十二秒&quot;, &quot;十三秒&quot;, &quot;十四秒&quot;, &quot;十五秒&quot;, &quot;十六秒&quot;, &quot;十七秒&quot;, &quot;十八秒&quot;, &quot;十九秒&quot;, &quot;二十秒&quot;,    &quot;二十一秒&quot;, &quot;二十二秒&quot;, &quot;二十三秒&quot;, &quot;二十四秒&quot;, &quot;二十五秒&quot;, &quot;二十六秒&quot;, &quot;二十七秒&quot;, &quot;二十八秒&quot;, &quot;二十九秒&quot;, &quot;三十秒&quot;,    &quot;三十一秒&quot;, &quot;三十二秒&quot;, &quot;三十三秒&quot;, &quot;三十四秒&quot;, &quot;三十五秒&quot;, &quot;三十六秒&quot;, &quot;三十七秒&quot;, &quot;三十八秒&quot;, &quot;三十九秒&quot;, &quot;四十秒&quot;,    &quot;四十一秒&quot;, &quot;四十二秒&quot;, &quot;四十三秒&quot;, &quot;四十四秒&quot;, &quot;四十五秒&quot;, &quot;四十六秒&quot;, &quot;四十七秒&quot;, &quot;四十八秒&quot;, &quot;四十九秒&quot;, &quot;五十秒&quot;,    &quot;五十一秒&quot;, &quot;五十二秒&quot;, &quot;五十三秒&quot;, &quot;五十四秒&quot;, &quot;五十五秒&quot;, &quot;五十六秒&quot;, &quot;五十七秒&quot;, &quot;五十八秒&quot;, &quot;五十九秒&quot;, &quot;六十秒&quot;];var clock;// 存放dom元素的数组   var monthList = [];var dayList = [];var weekList = [];var hourList = [];var minuteList = [];var secondsList = [];// 当前展示是否为圆形var isCircle = false;//二维数组 存放文字内容及页面显示标签 var textSet = [    [monthText, monthList],    [dayText, dayList],    [weekText, weekList],    [hourText, hourList],    [minuteText, minuteList],    [secondsText, secondsList]];window.onload = function () &#123;    init();    // 每隔100ms获得 当前时间 更新页面时间显示    setInterval(function () &#123;        runTime();    &#125;, 100);    // 在变成圆形之前先进性修改定位    changePosition();    // 延迟2000ms变成圆形    setTimeout(function () &#123;        changeCircle();    &#125;, 2000);&#125;// 初始化函数function init() &#123;    clock = document.getElementById(&#39;clock&#39;);    // 生成标签 存放文字展示    for (var i = 0; i &lt; textSet.length; i++) &#123;        for (var j = 0; j &lt; textSet[i][0].length; j++) &#123;            var temp = createLabel(textSet[i][0][j]);            clock.appendChild(temp);            // 将生成的标签存放在数组list中            textSet[i][1].push(temp);        &#125;    &#125;&#125;// 创建标签并将文字填充标签内 接收参数为文字内容  function createLabel(text) &#123;    var div = document.createElement(&#39;div&#39;);    div.classList.add(&#39;label&#39;);    div.innerText = text;    return div;&#125;function runTime() &#123;    // 利用时间对象获得 当前 时间    var now = new Date();    // 获得月 日期 小时 分钟 秒钟    var month = now.getMonth();    var day = now.getDate();    var week = now.getDay();    var hour = now.getHours();    var minute = now.getMinutes();    var seconds = now.getSeconds();    // 初始化时间颜色 同时将走过时间设置为灰色    initStyle();    // 设置当前时间为白色    // 将当前时间月份存放在数组中    var nowValue = [month, day - 1, week, hour, minute, seconds];    for (var i = 0; i &lt; nowValue.length; i++) &#123;        var num = nowValue[i];        textSet[i][1][num].style.color = &#39;#fff&#39;;    &#125;    // 变成圆形    if (isCircle) &#123;        // 确定圆心        var widthMid = document.body.clientWidth / 2;        var heightMid = document.body.clientHeight / 2;        // 将每一个dom元素确定到圆的位置        for (var i = 0; i &lt; textSet.length; i++) &#123;            for (var j = 0; j &lt; textSet[i][0].length; j++) &#123;                // 加算出每一个元素的位置  x y 坐标                // 每一个圆的半径与时分秒的位置有关                var r = (i + 1) * 35 + 50 * i;                // 计算每一个平均的角度  再将每一个单位对齐 然后转化成弧度                var deg = 360 / textSet[i][1].length * (j - nowValue[i]) ;                // 计算出每一个dom元素的坐标                var x = r * Math.sin(deg * Math.PI / 180) + widthMid;                var y = heightMid - r*Math.cos(deg * Math.PI / 180);                // 设置样式                var temp =  textSet[i][1][j];                temp.style.transform = &#39;rotate(&#39; + (-90 + deg ) + &#39;deg)&#39;;                temp.style.left = x + &#39;px&#39;;                temp.style.top = y + &#39;px&#39;;            &#125;        &#125;    &#125;&#125;function initStyle() &#123;    // 将所有标签置为灰色     // 利用取出dom元素    var label = document.getElementsByClassName(&#39;label&#39;);    for (var i = 0; i &lt; label.length; i++) &#123;        label[i].style.color = &#39;#4d4d4d&#39;;    &#125;    // 利用二维数组存放dom元素的数组    // for (var i = 0 ; i &lt; textSet.length ; i ++) &#123;    //     for (var j = 0 ; j &lt; textSet[i][0].length ; j ++) &#123;    //         textSet[i][1][j].style.color = &quot;#4d4d4d&quot;;    //     &#125;    // &#125;&#125;// 修改positionfunction changePosition() &#123;    for (let i = 0; i &lt; textSet.length; i++) &#123;        for (let j = 0; j &lt; textSet[i][1].length; j++) &#123;            // 先获得原来的位置  再修改position 设置left top             let tempX = textSet[i][1][j].offsetLeft + &quot;px&quot;;            let tempY = textSet[i][1][j].offsetTop + &quot;px&quot;;            // console.log(textSet[i][1][j]);            // 利用let 防止闭包            setTimeout(function () &#123;                textSet[i][1][j].style.position = &quot;absolute&quot;;                textSet[i][1][j].style.left = tempX;                textSet[i][1][j].style.top = tempY;            &#125;, 50);        &#125;    &#125;&#125;function changeCircle() &#123;    isCircle = true;    clock.style.transform = &quot;rotate(90deg)&quot;;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS封装方法总结</title>
      <link href="2019/09/05/js%E5%B0%81%E8%A3%85%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>2019/09/05/js%E5%B0%81%E8%A3%85%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><h1 id="JS封装方法总结"><a href="#JS封装方法总结" class="headerlink" title="JS封装方法总结"></a>JS封装方法总结</h1><h2 id="求滚动条滚动距离"><a href="#求滚动条滚动距离" class="headerlink" title="求滚动条滚动距离"></a>求滚动条滚动距离</h2><pre><code>function getScrollOffset() &#123;    if (window.pageXOffset) &#123;        return &#123;            x: window.pageXOffset,            y: window.pageYOffset        &#125;    &#125; else &#123;        return &#123;            x: document.body.scrollLeft + document.documentElement.scrollLeft,            y: document.body.scrollTop + document.documentElement.scrollTop        &#125;    &#125;&#125;</code></pre><h2 id="返回浏览器视口尺寸"><a href="#返回浏览器视口尺寸" class="headerlink" title="返回浏览器视口尺寸"></a>返回浏览器视口尺寸</h2><pre><code>function getViewportOffset() &#123;    if (window.innerWidth) &#123;        return &#123;            w: window.innerWidth,            h: window.innerHeight        &#125;    &#125; else &#123;        if (document.compatMode === &quot;BackCompat&quot;) &#123;            return &#123;                w: document.body.clientWidth,                h: document.body.clientHeight            &#125;        &#125; else &#123;            return &#123;                w: document.documentElement.clientWidth,                h: document.documentElement.clientHeight            &#125;        &#125;    &#125;&#125;</code></pre><h2 id="获取元素样式-兼容"><a href="#获取元素样式-兼容" class="headerlink" title="获取元素样式(兼容)"></a>获取元素样式(兼容)</h2><pre><code>function getStyle(elem, prop) &#123;    if (window.getComputedStyle) &#123;        return window.getComputedStyle(elem, null)[prop];    &#125; else &#123;        return elem.currentStyle[prop];    &#125;&#125;</code></pre><h2 id="给一个dom对象添加该事件类型的函数（兼容）"><a href="#给一个dom对象添加该事件类型的函数（兼容）" class="headerlink" title="给一个dom对象添加该事件类型的函数（兼容）"></a>给一个dom对象添加该事件类型的函数（兼容）</h2><pre><code>function addEvent(elem, type, handle) &#123;    if (elem.addEventListener) &#123;        elem.addEventListener(type, handle, false);    &#125; else if (elem.attachEvent) &#123;        elem.attachEvent(&#39;on&#39; + type, function () &#123;            handle.call(elem);        &#125;)    &#125; else &#123;        elem[&#39;on&#39; + type] = handle;    &#125;&#125;</code></pre><h2 id="删除事件"><a href="#删除事件" class="headerlink" title="删除事件"></a>删除事件</h2><pre><code>function removeEvent(elem, type, handle) &#123;    if (typeof elem.removeEventListener !== &#39;undefined&#39;) &#123;        elem.removeEventListener(type, handle, false);    &#125; else if (typeof elem.detachEvent !== &#39;undefined&#39;) &#123;        elem.detachEvent(&#39;on&#39; + type);    &#125;&#125;</code></pre><h2 id="取消冒泡（兼容）"><a href="#取消冒泡（兼容）" class="headerlink" title="取消冒泡（兼容）"></a>取消冒泡（兼容）</h2><pre><code>function stopBubble(event) &#123;    if (event.stopPropagation) &#123;        event.stopPropagation();    &#125; else &#123;        event.cancelBubble = true;    &#125;&#125;</code></pre><h2 id="阻止默认事件函数"><a href="#阻止默认事件函数" class="headerlink" title="阻止默认事件函数"></a>阻止默认事件函数</h2><pre><code>function cancelHandler(event) &#123;    if (event.preventDefault) &#123;        event.preventDefault();    &#125; else &#123;        event.returnValue = false;    &#125;&#125;</code></pre><h2 id="拖拽事件"><a href="#拖拽事件" class="headerlink" title="拖拽事件"></a>拖拽事件</h2><pre><code>function drag(elem) &#123;    var disX,        disY;    addEvent(elem, &#39;mousedown&#39;, function (e) &#123;        var event = e || window.event;        disX = event.clientX - parseInt(getStyle(elem, &#39;left&#39;));        disY = event.clientY - parseInt(getStyle(elem, &#39;top&#39;));        addEvent(document, &#39;mousemove&#39;, mouseMove);        addEvent(document, &#39;mouseup&#39;, mouseUp);        stopBubble(event);        cancelHandler(event);    &#125;);    function mouseMove(e) &#123;        var event = e || window.event;        elem.style.left = event.clientX - disX + &quot;px&quot;;        elem.style.top = event.clientY - disY + &quot;px&quot;;    &#125;    function mouseUp(e) &#123;        var event = e || window.event;        removeEvent(document, &#39;mousemove&#39;, mouseMove);        removeEvent(document, &#39;mouseup&#39;, mouseUp);    &#125;&#125;</code></pre><h2 id="异步加载（兼容）"><a href="#异步加载（兼容）" class="headerlink" title="异步加载（兼容）"></a>异步加载（兼容）</h2><pre><code>function loadScript(url, callback) &#123;    var script = document.createElement(&#39;script&#39;);    script.type = &quot;text/javascript&quot;;    if (script.readyState) &#123;        script.onreadstatechange = function () &#123;//IE            if (script.readyState == &quot;complete&quot; || script.readyStatereadyState == &quot;loaded&quot;) &#123;                callback();            &#125;        &#125;    &#125; else &#123;        script.onload = function () &#123;            callback();        &#125;    &#125;    script.src = url;    document.head.appendChild(script);&#125;loadScript(&#39;/*路径*/&#39;, function () &#123;    test();&#125;)</code></pre><h2 id="获取指定标签对象"><a href="#获取指定标签对象" class="headerlink" title="获取指定标签对象"></a>获取指定标签对象</h2><pre><code>/** * 获取指定标签对象 * @param id 标签的id属性值 * @returns &#123;Element&#125;根据id属性值返回指定标签对象 */function my$(id) &#123;    return document.getElementById(id);&#125;</code></pre><h2 id="设置任意的标签中间的任意文本内容"><a href="#设置任意的标签中间的任意文本内容" class="headerlink" title="设置任意的标签中间的任意文本内容"></a>设置任意的标签中间的任意文本内容</h2><pre><code>function setInnerText(element, text) &#123;    //判断浏览器是否支持这个属性    if (typeof element.textContent == &quot;undefined&quot;) &#123;//不支持        element.innerText = text;    &#125; else &#123;//支持这个属性        element.textContent = text;    &#125;&#125;my$(&quot;btn&quot;).onclick = function () &#123;    console.log(getInnerText(my$(&quot;dv&quot;)));&#125;;</code></pre><h2 id="获取任意标签中间的文本内容"><a href="#获取任意标签中间的文本内容" class="headerlink" title="获取任意标签中间的文本内容"></a>获取任意标签中间的文本内容</h2><pre><code>function getInnerText(element) &#123;    if (typeof element.textContent == &quot;undefined&quot;) &#123;        return element.innerText;    &#125; else &#123;        return element.textContent;    &#125;&#125;my$(&quot;btn&quot;).onclick = function () &#123;    setInnerText(my$(&quot;dv&quot;), &quot;哈哈,我又变帅了&quot;);&#125;;</code></pre><h2 id="获取任意一个父级元素的第一个子级元素"><a href="#获取任意一个父级元素的第一个子级元素" class="headerlink" title="获取任意一个父级元素的第一个子级元素"></a>获取任意一个父级元素的第一个子级元素</h2><pre><code>function getFirstElementChild(element) &#123;    if (element.firstElementChild) &#123;//true---&gt;支持        return element.firstElementChild;    &#125; else &#123;        var node = element.firstChild;//第一个节点        while (node &amp;&amp; node.nodeType != 1) &#123;            node = node.nextSibling;        &#125;        return node;    &#125;&#125;console.log(getFirstElementChild(my$(&quot;uu&quot;)).innerText);</code></pre><h2 id="获取任意一个父级元素的最后一个子级元素"><a href="#获取任意一个父级元素的最后一个子级元素" class="headerlink" title="获取任意一个父级元素的最后一个子级元素"></a>获取任意一个父级元素的最后一个子级元素</h2><pre><code>function getLastElementChild(element) &#123;    if (element.lastElementChild) &#123;//true---&gt;支持        return element.lastElementChild;    &#125; else &#123;        var node = element.lastChild;//第一个节点        while (node &amp;&amp; node.nodeType != 1) &#123;            node = node.previousSibling;        &#125;        return node;    &#125;&#125;console.log(getLastElementChild(my$(&quot;uu&quot;)).innerText);</code></pre><h2 id="获取某个元素的前一个兄弟元素"><a href="#获取某个元素的前一个兄弟元素" class="headerlink" title="获取某个元素的前一个兄弟元素"></a>获取某个元素的前一个兄弟元素</h2><pre><code>/** * 获取某个元素的前一个兄弟元素 * @param element 某个元素 * @returns &#123;*&#125; 前一个兄弟元素 */function getPreviousElement(element) &#123;    if (element.previousElementSibling) &#123;        return element.previousElementSibling    &#125; else &#123;        var node = element.previousSibling;        while (node &amp;&amp; node.nodeType != 1) &#123;            node = node.previousSibling;        &#125;        return node;    &#125;&#125;</code></pre><h2 id="获取某个元素的后一个兄弟元素"><a href="#获取某个元素的后一个兄弟元素" class="headerlink" title="获取某个元素的后一个兄弟元素"></a>获取某个元素的后一个兄弟元素</h2><pre><code>/** * 获取某个元素的后一个兄弟元素 * @param element 某个元素 * @returns &#123;*&#125; 后一个兄弟元素 */function getNextElement(element) &#123;    if (element.nextElementSibling) &#123;        return element.nextElementSibling    &#125; else &#123;        var node = element.nextSibling;        while (node &amp;&amp; node.nodeType != 1) &#123;            node = node.nextSibling;        &#125;        return node;    &#125;&#125;</code></pre><h2 id="获取某个元素的所有兄弟元素"><a href="#获取某个元素的所有兄弟元素" class="headerlink" title="获取某个元素的所有兄弟元素"></a>获取某个元素的所有兄弟元素</h2><pre><code>/** * 获取某个元素的所有兄弟元素 * @param element 某个元素 * @returns &#123;Array&#125; 兄弟元素 */function getSiblings(element) &#123;    if (!element) return;    var elements = [];    var ele = element.previousSibling;    while (ele) &#123;        if (ele.nodeType === 1) &#123;            elements.push(ele);        &#125;        ele = ele.previousSibling;    &#125;    ele = element.nextSibling;    while (ele) &#123;        if (ele.nodeType === 1) &#123;            elements.push(ele);        &#125;        ele = ele.nextSibling;    &#125;    return elements;&#125;</code></pre><h2 id="为任意元素-绑定任意的事件-任意的元素-事件的类型-事件处理函数"><a href="#为任意元素-绑定任意的事件-任意的元素-事件的类型-事件处理函数" class="headerlink" title="为任意元素.绑定任意的事件, 任意的元素,事件的类型,事件处理函数"></a>为任意元素.绑定任意的事件, 任意的元素,事件的类型,事件处理函数</h2><pre><code>function addEventListener(element, type, fn) &#123;    //判断浏览器是否支持这个方法    if (element.addEventListener) &#123;        element.addEventListener(type, fn, false);    &#125; else if (element.attachEvent) &#123;        element.attachEvent(&quot;on&quot; + type, fn);    &#125; else &#123;        element[&quot;on&quot; + type] = fn;    &#125;&#125;</code></pre><h2 id="为任意的一个元素-解绑对应的事件"><a href="#为任意的一个元素-解绑对应的事件" class="headerlink" title="为任意的一个元素,解绑对应的事件"></a>为任意的一个元素,解绑对应的事件</h2><pre><code>function removeEventListener(element, type, fnName) &#123;    if (element.removeEventListener) &#123;        element.removeEventListener(type, fnName, false);    &#125; else if (element.detachEvent) &#123;        element.detachEvent(&quot;on&quot; + type, fnName);    &#125; else &#123;        element[&quot;on&quot; + type] = null;    &#125;&#125;</code></pre><h2 id="格式化日期"><a href="#格式化日期" class="headerlink" title="格式化日期"></a>格式化日期</h2><pre><code>/** * 格式化日期 * @param dt 日期对象 * @returns &#123;string&#125; 返回值是格式化的字符串日期 */function getDates(dt) &#123;    var str = &quot;&quot;;//存储时间的字符串    //获取年    var year = dt.getFullYear();    //获取月    var month = dt.getMonth() + 1;    //获取日    var day = dt.getDate();    //获取小时    var hour = dt.getHours();    //获取分钟    var min = dt.getMinutes();    //获取秒    var sec = dt.getSeconds();    month = month &lt; 10 ? &quot;0&quot; + month : month;    day = day &lt; 10 ? &quot;0&quot; + day : day;    hour = hour &lt; 10 ? &quot;0&quot; + hour : hour;    min = min &lt; 10 ? &quot;0&quot; + min : min;    sec = sec &lt; 10 ? &quot;0&quot; + sec : sec;    str = year + &quot;年&quot; + month + &quot;月&quot; + day + &quot;日 &quot; + hour + &quot;:&quot; + min + &quot;:&quot; + sec;    return str;&#125;</code></pre><h2 id="返回当前浏览器是什么类型的浏览器"><a href="#返回当前浏览器是什么类型的浏览器" class="headerlink" title="返回当前浏览器是什么类型的浏览器"></a>返回当前浏览器是什么类型的浏览器</h2><pre><code>function userBrowser() &#123;    var browserName = navigator.userAgent.toLowerCase();    if (/msie/i.test(browserName) &amp;&amp; !/opera/.test(browserName)) &#123;        console.log(&quot;IE&quot;);    &#125; else if (/firefox/i.test(browserName)) &#123;        console.log(&quot;Firefox&quot;);    &#125; else if (/chrome/i.test(browserName) &amp;&amp; /webkit/i.test(browserName) &amp;&amp; /mozilla/i.test(browserName)) &#123;        console.log(&quot;Chrome&quot;);    &#125; else if (/opera/i.test(browserName)) &#123;        console.log(&quot;Opera&quot;);    &#125; else if (/webkit/i.test(browserName) &amp;&amp; !(/chrome/i.test(browserName) &amp;&amp; /webkit/i.test(browserName) &amp;&amp; /mozilla/i.test(browserName))) &#123;        console.log(&quot;Safari&quot;);    &#125; else &#123;        console.log(&quot;不知道什么鬼!&quot;);    &#125;&#125;</code></pre><h2 id="动画函数—任意一个元素移动到指定的目标位置"><a href="#动画函数—任意一个元素移动到指定的目标位置" class="headerlink" title="动画函数—任意一个元素移动到指定的目标位置"></a>动画函数—任意一个元素移动到指定的目标位置</h2><pre><code>function animate(element, target) &#123;    //先清理定时器    clearInterval(element.timeId);    //一会要清理定时器(只产生一个定时器)    element.timeId = setInterval(function () &#123;        //获取div的当前的位置        var current = element.offsetLeft;//数字类型,没有px        //div每次移动多少像素---步数        var step = 10;        step = current &lt; target ? step : -step;        //每次移动后的距离        current += step;        //判断当前移动后的位置是否到达目标位置        if (Math.abs(target - current) &gt; Math.abs(step)) &#123;            element.style.left = current + &quot;px&quot;;        &#125; else &#123;            //清理定时器            clearInterval(element.timeId);            element.style.left = target + &quot;px&quot;;        &#125;    &#125;, 20);&#125;my$(&quot;btn2&quot;).onclick = function () &#123;    animate(my$(&quot;dv&quot;), 800);&#125;;</code></pre><h2 id="变速动画-任意一个元素移动到指定的目标位置"><a href="#变速动画-任意一个元素移动到指定的目标位置" class="headerlink" title="变速动画-任意一个元素移动到指定的目标位置"></a>变速动画-任意一个元素移动到指定的目标位置</h2><pre><code>function animateChange(element, target) &#123;    //清理定时器    clearInterval(element.timeId);    element.timeId = setInterval(function () &#123;      //获取元素的当前位置      var current = element.offsetLeft;      //移动的步数      var step = (target-current)/10;      step = step&gt;0?Math.ceil(step):Math.floor(step);      current += step;      element.style.left = current + &quot;px&quot;;      if(current==target) &#123;        //清理定时器        clearInterval(element.timeId);      &#125;      //测试代码:      console.log(&quot;目标位置:&quot;+target+&quot;,当前位置:&quot;+current+&quot;,每次移动步数:&quot;+step);    &#125;, 20);  &#125;  my$(&quot;btn2&quot;).onclick = function () &#123;    animateChange(my$(&quot;dv&quot;), 800);&#125;;</code></pre><h2 id="foreach的兼容代码"><a href="#foreach的兼容代码" class="headerlink" title="foreach的兼容代码"></a>foreach的兼容代码</h2><pre><code>if (!Array.prototype.forEach) &#123;    Array.prototype.forEach = function (callback, thisArg) &#123;        var T, k;        if (this == null) &#123;            throw new TypeError(&#39; this is null or not defined&#39;);        &#125;        // 1. Let O be the result of calling toObject() passing the        // |this| value as the argument.        var O = Object(this);        // 2. Let lenValue be the result of calling the Get() internal        // method of O with the argument &quot;length&quot;.        // 3. Let len be toUint32(lenValue).        var len = O.length &gt;&gt;&gt; 0;        // 4. If isCallable(callback) is false, throw a TypeError exception.         // See: http://es5.github.com/#x9.11        if (typeof callback !== &quot;function&quot;) &#123;            throw new TypeError(callback + &#39; is not a function&#39;);        &#125;        // 5. If thisArg was supplied, let T be thisArg; else let        // T be undefined.        if (arguments.length &gt; 1) &#123;            T = thisArg;        &#125;        // 6. Let k be 0        k = 0;        // 7. Repeat, while k &lt; len        while (k &lt; len) &#123;            var kValue;            // a. Let Pk be ToString(k).            //    This is implicit for LHS operands of the in operator            // b. Let kPresent be the result of calling the HasProperty            //    internal method of O with argument Pk.            //    This step can be combined with c            // c. If kPresent is true, then            if (k in O) &#123;                // i. Let kValue be the result of calling the Get internal                // method of O with argument Pk.                kValue = O[k];                // ii. Call the Call internal method of callback with T as                // the this value and argument list containing kValue, k, and O.                callback.call(T, kValue, k, O);            &#125;            // d. Increase k by 1.            k++;        &#125;        // 8. return undefined    &#125;;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 简介</title>
      <link href="2019/09/05/markdown%E8%AF%AD%E6%B3%95/"/>
      <url>2019/09/05/markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><h1 id="P01-Markdown-简介"><a href="#P01-Markdown-简介" class="headerlink" title="P01 Markdown 简介"></a>P01 Markdown 简介</h1><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p><p>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</p><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p><p>Markdown 编写的文档后缀为 <kbd>.md</kbd>或<kbd>.markdown</kbd>。</p><h1 id="P02-Markdown-标题"><a href="#P02-Markdown-标题" class="headerlink" title="P02 Markdown 标题"></a>P02 Markdown 标题</h1><p>Markdown 标题有两种格式。</p><blockquote><p>1.使用 = 和 - 标记一级和二级标题</p></blockquote><pre><code>我展示的是一级标题=================我展示的是二级标题-----------------</code></pre><h1 id="我展示的是一级标题"><a href="#我展示的是一级标题" class="headerlink" title="我展示的是一级标题"></a>我展示的是一级标题</h1><h2 id="我展示的是二级标题"><a href="#我展示的是二级标题" class="headerlink" title="我展示的是二级标题"></a>我展示的是二级标题</h2><blockquote><p>2.使用 # 号标记</p></blockquote><p>使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。</p>```## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题```## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题<h1 id="P03-Markdown-段落"><a href="#P03-Markdown-段落" class="headerlink" title="P03 Markdown 段落"></a>P03 Markdown 段落</h1><p>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>Markdown 可以使用以下几种字体</p><pre><code>*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___</code></pre><p>显示效果如下所示：</p><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><strong><em>粗斜体文本</em></strong></p><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre><code>**** * ******- - -----------</code></pre><hr><hr><hr><hr><hr><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：</p><pre><code>~~BAIDU.COM~~</code></pre><p><del>BAIDU.COM</del></p><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><p>下划线可以通过 HTML 的 <code>&lt;u&gt;</code> 标签来实现：</p><pre><code>&lt;u&gt;带下划线文本&lt;/u&gt;</code></pre><p><u>带下划线文本</u></p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>脚注是对文本的补充说明。</p><pre><code>创建脚注格式类似这样 [^RUNOOB]。[^RUNOOB]: 菜鸟教程 -- 学的不仅是技术，更是梦想！！！</code></pre><p>创建脚注格式类似这样 [^runoob]。</p><p>[^runoob]: 菜鸟教程 – 学的不仅是技术，更是梦想！！！</p><h1 id="P04-Markdown-列表"><a href="#P04-Markdown-列表" class="headerlink" title="P04 Markdown 列表"></a>P04 Markdown 列表</h1><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记：</p><pre><code>* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项</code></pre><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>有序列表使用数字并加上 . 号来表示，如</p><pre><code>1. 第一项2. 第二项3. 第三项</code></pre><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><h2 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h2><pre><code>1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第二个元素</code></pre><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><h1 id="P05-Markdown-区块"><a href="#P05-Markdown-区块" class="headerlink" title="P05 Markdown 区块"></a>P05 Markdown 区块</h1><p>Markdown 区块引用是在段落开头使用 <code>&gt;</code> 符号 ，然后后面紧跟一个空格符号：</p><pre><code>&gt; 区块引用&gt; 菜鸟教程&gt; 学的不仅是技术更是梦想</code></pre><blockquote><p>区块引用<br>菜鸟教程<br>学的不仅是技术更是梦想</p></blockquote><p>另外区块是可以嵌套的，一个 <code>&gt;</code> 符号是最外层，两个 <code>&gt;</code> 符号是第一层嵌套，以此类推：</p><pre><code>&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套</code></pre><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><h2 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h2><p>区块中使用列表实例如下：</p><pre><code>&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项</code></pre><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><h2 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h2><p>如果要在列表项目内放进区块，那么就需要在 <code>&gt;</code> 前添加四个空格的缩进。</p><p>区块中使用列表实例如下：</p><pre><code>* 第一项    &gt; 菜鸟教程    &gt; 学的不仅是技术更是梦想* 第二项</code></pre><ul><li>第一项<blockquote><p>菜鸟教程<br>学的不仅是技术更是梦想</p></blockquote></li><li>第二项</li></ul><h1 id="P06-Markdown-代码"><a href="#P06-Markdown-代码" class="headerlink" title="P06 Markdown 代码"></a>P06 Markdown 代码</h1><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来<kbd>`</kbd>，例如：</p><pre><code>`printf()` 函数</code></pre><p><code>printf()</code> 函数</p><h2 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h2><p>代码区块使用 4 个空格或者一个制表符（Tab 键）</p><pre><code>    $(document).ready(function () &#123;    alert(&#39;RUNOOB&#39;);    &#125;);</code></pre><pre><code>$(document).ready(function () &#123;alert(&#39;RUNOOB&#39;);&#125;);</code></pre><p>也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定）：</p><pre><code>```javascript$(document).ready(function () &#123;    alert(&#39;RUNOOB&#39;);&#125;);```</code></pre><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'RUNOOB'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="P07-Markdown-链接"><a href="#P07-Markdown-链接" class="headerlink" title="P07 Markdown 链接"></a>P07 Markdown 链接</h1><p>链接使用方法如下：</p><pre><code>[链接名称](链接地址)或者&lt;链接地址&gt;</code></pre><p>例如：</p><pre><code>这是一个链接 [菜鸟教程](https://www.runoob.com)</code></pre><p>显示结果如下：</p><p>这是一个链接 <a href="https://www.runoob.com/">菜鸟教程</a></p><blockquote><p>直接使用链接地址：</p></blockquote><pre><code>&lt;https://www.runoob.com&gt;</code></pre><p><a href="https://www.runoob.com/">https://www.runoob.com</a></p><h2 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h2><pre><code>链接也可以用变量来代替，文档末尾附带变量地址：这个链接用 1 作为网址变量 [Google][1]这个链接用 runoob 作为网址变量 [Runoob][runoob]然后在文档的结尾为变量赋值（网址）  [1]: http://www.google.com/  [runoob]: http://www.runoob.com/</code></pre><p>这个链接用 1 作为网址变量 <a href="http://www.google.com/">Google</a><br>这个链接用 runoob 作为网址变量 <a href="http://www.runoob.com/">Runoob</a></p><h1 id="P08-Markdown-图片"><a href="#P08-Markdown-图片" class="headerlink" title="P08 Markdown 图片"></a>P08 Markdown 图片</h1><p>Markdown 图片语法格式如下：</p><pre><code>![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;)</code></pre><blockquote><p>开头一个感叹号 !</p></blockquote><blockquote><p>接着一个方括号，里面放上图片的替代文字</p></blockquote><blockquote><p>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</p></blockquote><p>例：</p><pre><code>![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png)![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png &quot;RUNOOB&quot;)</code></pre><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标" title="RUNOOB"></p><p>也可以像网址那样对图片网址使用变量:</p><p>例：</p><pre><code>这个链接用 1 作为网址变量 [RUNOOB][1].然后在文档的结尾为变量赋值（网址）[1]: http://static.runoob.com/images/runoob-logo.png</code></pre><p>这个链接用 1 作为网址变量 <a href="http://static.runoob.com/images/runoob-logo.png">RUNOOB</a>.</p><blockquote><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <code>img</code> 标签。、</p></blockquote><p>例：</p><pre><code>&lt;img src=&quot;http://static.runoob.com/images/runoob-logo.png&quot; width=&quot;50%&quot;&gt;</code></pre><img src="http://static.runoob.com/images/runoob-logo.png" width="50%"><h1 id="P09-Markdown-表格"><a href="#P09-Markdown-表格" class="headerlink" title="P09 Markdown 表格"></a>P09 Markdown 表格</h1><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><pre><code>|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |</code></pre><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><blockquote><p>对齐方式</p></blockquote><p>我们可以设置表格的对齐方式：</p><ul><li>-: 设置内容和标题栏居右对齐。</li><li>:- 设置内容和标题栏居左对齐。</li><li>:-: 设置内容和标题栏居中对齐。</li></ul><p>例：</p><pre><code>| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |</code></pre><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h1 id="P10-Markdown-高级技巧"><a href="#P10-Markdown-高级技巧" class="headerlink" title="P10 Markdown 高级技巧"></a>P10 Markdown 高级技巧</h1><h2 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h2><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有：<code>&lt;kbd&gt;</code> <code>&lt;b&gt;</code> <code>&lt;i&gt;</code> <code>&lt;em&gt;</code> <code>&lt;sup&gt;</code> <code>&lt;sub&gt;</code> <code>&lt;br&gt;</code>等</p><p>如：</p><pre><code>使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</code></pre><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><h2 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h2><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><p>例：</p><pre><code>**文本加粗** \*\* 正常显示星号 \*\*</code></pre><p><strong>文本加粗</strong><br>** 正常显示星号 **</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><pre><code>\   反斜线`   反引号*   星号_   下划线&#123;&#125;  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号</code></pre><h1 id="P11-视频"><a href="#P11-视频" class="headerlink" title="P11 视频"></a>P11 视频</h1><pre><code>&lt;video src=&quot;https://v-cdn.zjol.com.cn/276985.mp4&quot; controls=&quot;controls&quot; width=&quot;100%&quot;&gt;您的浏览器不支持播放该视频！&lt;/video&gt;</code></pre><p><video src="http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&bizid=1023&hy=SH&fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400" controls="controls" width="100%">您的浏览器不支持播放该视频！</video></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="2019/09/05/text/"/>
      <url>2019/09/05/text/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><h1 id="P01-Markdown-简介"><a href="#P01-Markdown-简介" class="headerlink" title="P01 Markdown 简介"></a>P01 Markdown 简介</h1><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p><p>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</p><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p><p>Markdown 编写的文档后缀为 <kbd>.md</kbd>或<kbd>.markdown</kbd>。</p><h1 id="P02-Markdown-标题"><a href="#P02-Markdown-标题" class="headerlink" title="P02 Markdown 标题"></a>P02 Markdown 标题</h1><p>Markdown 标题有两种格式。</p><blockquote><p>1.使用 = 和 - 标记一级和二级标题</p></blockquote><pre><code>我展示的是一级标题=================我展示的是二级标题-----------------</code></pre><h1 id="我展示的是一级标题"><a href="#我展示的是一级标题" class="headerlink" title="我展示的是一级标题"></a>我展示的是一级标题</h1><h2 id="我展示的是二级标题"><a href="#我展示的是二级标题" class="headerlink" title="我展示的是二级标题"></a>我展示的是二级标题</h2><blockquote><p>2.使用 # 号标记</p></blockquote><p>使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。</p>```## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题```## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题<h1 id="P03-Markdown-段落"><a href="#P03-Markdown-段落" class="headerlink" title="P03 Markdown 段落"></a>P03 Markdown 段落</h1><p>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>Markdown 可以使用以下几种字体</p><pre><code>*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___</code></pre><p>显示效果如下所示：</p><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><strong><em>粗斜体文本</em></strong></p><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre><code>**** * ******- - -----------</code></pre><hr><hr><hr><hr><hr><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：</p><pre><code>~~BAIDU.COM~~</code></pre><p><del>BAIDU.COM</del></p><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><p>下划线可以通过 HTML 的 <code>&lt;u&gt;</code> 标签来实现：</p><pre><code>&lt;u&gt;带下划线文本&lt;/u&gt;</code></pre><p><u>带下划线文本</u></p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>脚注是对文本的补充说明。</p><pre><code>创建脚注格式类似这样 [^RUNOOB]。[^RUNOOB]: 菜鸟教程 -- 学的不仅是技术，更是梦想！！！</code></pre><p>创建脚注格式类似这样 [^runoob]。</p><p>[^runoob]: 菜鸟教程 – 学的不仅是技术，更是梦想！！！</p><h1 id="P04-Markdown-列表"><a href="#P04-Markdown-列表" class="headerlink" title="P04 Markdown 列表"></a>P04 Markdown 列表</h1><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记：</p><pre><code>* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项</code></pre><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>有序列表使用数字并加上 . 号来表示，如</p><pre><code>1. 第一项2. 第二项3. 第三项</code></pre><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><h2 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h2><pre><code>1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第二个元素</code></pre><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><h1 id="P05-Markdown-区块"><a href="#P05-Markdown-区块" class="headerlink" title="P05 Markdown 区块"></a>P05 Markdown 区块</h1><p>Markdown 区块引用是在段落开头使用 <code>&gt;</code> 符号 ，然后后面紧跟一个空格符号：</p><pre><code>&gt; 区块引用&gt; 菜鸟教程&gt; 学的不仅是技术更是梦想</code></pre><blockquote><p>区块引用<br>菜鸟教程<br>学的不仅是技术更是梦想</p></blockquote><p>另外区块是可以嵌套的，一个 <code>&gt;</code> 符号是最外层，两个 <code>&gt;</code> 符号是第一层嵌套，以此类推：</p><pre><code>&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套</code></pre><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><h2 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h2><p>区块中使用列表实例如下：</p><pre><code>&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项</code></pre><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><h2 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h2><p>如果要在列表项目内放进区块，那么就需要在 <code>&gt;</code> 前添加四个空格的缩进。</p><p>区块中使用列表实例如下：</p><pre><code>* 第一项    &gt; 菜鸟教程    &gt; 学的不仅是技术更是梦想* 第二项</code></pre><ul><li>第一项<blockquote><p>菜鸟教程<br>学的不仅是技术更是梦想</p></blockquote></li><li>第二项</li></ul><h1 id="P06-Markdown-代码"><a href="#P06-Markdown-代码" class="headerlink" title="P06 Markdown 代码"></a>P06 Markdown 代码</h1><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来<kbd>`</kbd>，例如：</p><pre><code>`printf()` 函数</code></pre><p><code>printf()</code> 函数</p><h2 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h2><p>代码区块使用 4 个空格或者一个制表符（Tab 键）</p><pre><code>    $(document).ready(function () &#123;    alert(&#39;RUNOOB&#39;);    &#125;);</code></pre><pre><code>$(document).ready(function () &#123;alert(&#39;RUNOOB&#39;);&#125;);</code></pre><p>也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定）：</p><pre><code>```javascript$(document).ready(function () &#123;    alert(&#39;RUNOOB&#39;);&#125;);```</code></pre><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'RUNOOB'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="P07-Markdown-链接"><a href="#P07-Markdown-链接" class="headerlink" title="P07 Markdown 链接"></a>P07 Markdown 链接</h1><p>链接使用方法如下：</p><pre><code>[链接名称](链接地址)或者&lt;链接地址&gt;</code></pre><p>例如：</p><pre><code>这是一个链接 [菜鸟教程](https://www.runoob.com)</code></pre><p>显示结果如下：</p><p>这是一个链接 <a href="https://www.runoob.com/">菜鸟教程</a></p><blockquote><p>直接使用链接地址：</p></blockquote><pre><code>&lt;https://www.runoob.com&gt;</code></pre><p><a href="https://www.runoob.com/">https://www.runoob.com</a></p><h2 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h2><pre><code>链接也可以用变量来代替，文档末尾附带变量地址：这个链接用 1 作为网址变量 [Google][1]这个链接用 runoob 作为网址变量 [Runoob][runoob]然后在文档的结尾为变量赋值（网址）  [1]: http://www.google.com/  [runoob]: http://www.runoob.com/</code></pre><p>这个链接用 1 作为网址变量 <a href="http://www.google.com/">Google</a><br>这个链接用 runoob 作为网址变量 <a href="http://www.runoob.com/">Runoob</a></p><h1 id="P08-Markdown-图片"><a href="#P08-Markdown-图片" class="headerlink" title="P08 Markdown 图片"></a>P08 Markdown 图片</h1><p>Markdown 图片语法格式如下：</p><pre><code>![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;)</code></pre><blockquote><p>开头一个感叹号 !</p></blockquote><blockquote><p>接着一个方括号，里面放上图片的替代文字</p></blockquote><blockquote><p>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</p></blockquote><p>例：</p><pre><code>![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png)![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png &quot;RUNOOB&quot;)</code></pre><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标" title="RUNOOB"></p><p>也可以像网址那样对图片网址使用变量:</p><p>例：</p><pre><code>这个链接用 1 作为网址变量 [RUNOOB][1].然后在文档的结尾为变量赋值（网址）[1]: http://static.runoob.com/images/runoob-logo.png</code></pre><p>这个链接用 1 作为网址变量 <a href="http://static.runoob.com/images/runoob-logo.png">RUNOOB</a>.</p><blockquote><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <code>img</code> 标签。、</p></blockquote><p>例：</p><pre><code>&lt;img src=&quot;http://static.runoob.com/images/runoob-logo.png&quot; width=&quot;50%&quot;&gt;</code></pre><img src="http://static.runoob.com/images/runoob-logo.png" width="50%"><h1 id="P09-Markdown-表格"><a href="#P09-Markdown-表格" class="headerlink" title="P09 Markdown 表格"></a>P09 Markdown 表格</h1><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><pre><code>|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |</code></pre><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><blockquote><p>对齐方式</p></blockquote><p>我们可以设置表格的对齐方式：</p><ul><li>-: 设置内容和标题栏居右对齐。</li><li>:- 设置内容和标题栏居左对齐。</li><li>:-: 设置内容和标题栏居中对齐。</li></ul><p>例：</p><pre><code>| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |</code></pre><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h1 id="P10-Markdown-高级技巧"><a href="#P10-Markdown-高级技巧" class="headerlink" title="P10 Markdown 高级技巧"></a>P10 Markdown 高级技巧</h1><h2 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h2><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有：<code>&lt;kbd&gt;</code> <code>&lt;b&gt;</code> <code>&lt;i&gt;</code> <code>&lt;em&gt;</code> <code>&lt;sup&gt;</code> <code>&lt;sub&gt;</code> <code>&lt;br&gt;</code>等</p><p>如：</p><pre><code>使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</code></pre><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><h2 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h2><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><p>例：</p><pre><code>**文本加粗** \*\* 正常显示星号 \*\*</code></pre><p><strong>文本加粗</strong><br>** 正常显示星号 **</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><pre><code>\   反斜线`   反引号*   星号_   下划线&#123;&#125;  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号</code></pre><h1 id="P11-视频"><a href="#P11-视频" class="headerlink" title="P11 视频"></a>P11 视频</h1><pre><code>&lt;video src=&quot;https://v-cdn.zjol.com.cn/276985.mp4&quot; controls=&quot;controls&quot; width=&quot;100%&quot;&gt;您的浏览器不支持播放该视频！&lt;/video&gt;</code></pre><p><video src="http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&bizid=1023&hy=SH&fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400" controls="controls" width="100%">您的浏览器不支持播放该视频！</video></p>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> npm </tag>
            
            <tag> nvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用github存储图片</title>
      <link href="2019/09/05/%E4%BD%BF%E7%94%A8github%E5%AD%98%E5%82%A8%E5%9B%BE%E7%89%87/"/>
      <url>2019/09/05/%E4%BD%BF%E7%94%A8github%E5%AD%98%E5%82%A8%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><h4 id="1-创建仓库"><a href="#1-创建仓库" class="headerlink" title="1.创建仓库"></a>1.创建仓库</h4><p>首先要在Github上创建一个图片管理仓库，方法很简单，随便命名，如下图：<br><img src="https://raw.githubusercontent.com/printfCYQ/cyqblog-img/master/new-repository.png?token=AKUA4KLROOR4JNPFMPYRXMC6SPKNE" width="100%"></p><h4 id="2-克隆仓库"><a href="#2-克隆仓库" class="headerlink" title="2.克隆仓库"></a>2.克隆仓库</h4><p>到Github的客户端将刚刚创建的仓库clone到你指定的位置，如下图：<br><img src="https://raw.githubusercontent.com/printfCYQ/cyqblog-img/master/clone-repository.png?token=AKUA4KNBZWL3CIG5CFO7Q7S6SPKPI" width="100%"></p><h4 id="3-上传图片"><a href="#3-上传图片" class="headerlink" title="3.上传图片"></a>3.上传图片</h4><p>点击<code>open this repository</code>，将要上传的图片放进改文件夹，返回github客户端填写描述，点击<code>Commit to master</code>即可自动进入下一页，此时还没有将图片上传到仓库，需要在此点击一下右上角<code>Publish</code>将图片上传到仓库，如下图：<br><img src="https://raw.githubusercontent.com/printfCYQ/cyqblog-img/master/open-file.png?token=AKUA4KMMPRLNDI44TIOK2AC6SPKR4" width="100%"><br><img src="https://raw.githubusercontent.com/printfCYQ/cyqblog-img/master/update-img.png?token=AKUA4KMVRR6HVL5AU5ETQOC6SPKUS" width="100%"></p><h4 id="4-获取链接"><a href="#4-获取链接" class="headerlink" title="4.获取链接"></a>4.获取链接</h4><p>待上传成功后打开自己的Github主页找到图片仓库进入，选择其中一张图片点击，进入图片详情后点击<code>Download</code>进入图片的下载链接页。</p><img src="https://raw.githubusercontent.com/printfCYQ/cyqblog-img/master/download-img.png?token=AKUA4KKAKUYQVD2LG4WAPQK6SPKY2" width="100%"><p>至此，成功获取到链接。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用七牛云存储文件</title>
      <link href="2019/09/05/%E4%BD%BF%E7%94%A8%E4%B8%83%E7%89%9B%E4%BA%91%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6/"/>
      <url>2019/09/05/%E4%BD%BF%E7%94%A8%E4%B8%83%E7%89%9B%E4%BA%91%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><p><b>需求：</b>在本地写作时，把图片直接传到图片服务器，复制图片URL到本地的markdown文档——发布时只需要将文本内容传到博客即可。访问博客时，博客服务器也只需要加载文本内容，图片内容由图片服务器负责加载。</p><p>之前使用Github进行存储，使用过程发现Github经常不能访问，所以使用七牛云进行存储。</p><h4 id="1-注册七牛云账号"><a href="#1-注册七牛云账号" class="headerlink" title="1.注册七牛云账号"></a>1.注册七牛云账号</h4><hr><p><a target="_blank" href="https://www.qiniu.com/">七牛云</a><br>实名认证即可获得<code>10GB</code>存储空间，对于博客已经很够用。</p><h4 id="2-创建空间"><a href="#2-创建空间" class="headerlink" title="2. 创建空间"></a>2. 创建空间</h4><hr><p>登录，到主页后点击对象存储-空间管理，新建一个空间。</p><p>填写好必填内容，即可创建成功。<br><img src="http://q8s2pu3ll.bkt.clouddn.com/qiniu-1.png?e=1587474390&token=voGbpLBJSZOJRRtvMG9WA4cNlqdXthz-bNgDcMxe:Z9rtH9mGvIPbtGmIKeoRBxUyjhM=&attname=" width="100%"></p><h4 id="3-上传图片"><a href="#3-上传图片" class="headerlink" title="3.上传图片"></a>3.上传图片</h4><hr><p>空间管理-&gt;文件管理-&gt;上传文件<br>选择文件后上传-&gt;上传成功的会在文件列表出现。</p><img src="http://q8s2pu3ll.bkt.clouddn.com/qiniu-2.png?e=1587474680&token=voGbpLBJSZOJRRtvMG9WA4cNlqdXthz-bNgDcMxe:MuQc24hMqSZhuE2VjyyiZm9V3J4=&attname=" width="100%"><h4 id="4-获取URL"><a href="#4-获取URL" class="headerlink" title="4.获取URL"></a>4.获取URL</h4><hr><p>文件列表-&gt;操作-&gt;更多-&gt;下载<br>即可复制URL<br><img src="http://q8s2pu3ll.bkt.clouddn.com/qiniu-3.png?e=1587474680&token=voGbpLBJSZOJRRtvMG9WA4cNlqdXthz-bNgDcMxe:9m7IFWIg3fI_6px13qut9i4EnZQ=&attname=" width="100%"></p><center>-- END --</center>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用学习网站</title>
      <link href="2019/09/05/%E5%B8%B8%E7%94%A8%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/"/>
      <url>2019/09/05/%E5%B8%B8%E7%94%A8%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><h1 id="常用学习网站"><a href="#常用学习网站" class="headerlink" title="常用学习网站"></a>常用学习网站</h1><h2 id="1-W3school"><a href="#1-W3school" class="headerlink" title="1.W3school"></a>1.W3school</h2><p>领先的 Web 技术教程 - 全部免费。</p><p>在 W3School，你可以找到你所需要的所有的网站建设教程。</p><p>从基础的 HTML 到 CSS，乃至进阶的 XML、SQL、JS、PHP 和 ASP .NET。</p><p><a href="https://www.w3school.com.cn/" target="_blank">W3school</a></p><hr><h2 id="2-菜鸟教程"><a href="#2-菜鸟教程" class="headerlink" title="2.菜鸟教程"></a>2.菜鸟教程</h2><p>和W3school一样丰富的学习网站</p><p><a href="https://www.runoob.com/" target="_blank">菜鸟教程</a></p><hr><h2 id="3-React"><a href="#3-React" class="headerlink" title="3.React"></a>3.React</h2><p>React 使创建交互式 UI 变得轻而易举。为你应用的每一个状态设计简洁的视图，当数据改变时 React 能有效地更新并正确地渲染组件。以声明式编写 UI，可以让你的代码更加可靠，且方便调试。</p><p><a href="https://zh-hans.reactjs.org/" target="_blank">React</a></p><hr><h2 id="4-VUE"><a href="#4-VUE" class="headerlink" title="4.VUE"></a>4.VUE</h2><p>不断繁荣的生态系统，可以在一个库和一套完整框架之间自如伸缩。</p><p>20kB min+gzip 运行大小超快虚拟 DOM最省心的优化。</p><p><a href="https://cn.vuejs.org/" target="_blank">VUE</a></p><hr><h2 id="5-Bootstrap"><a href="#5-Bootstrap" class="headerlink" title="5.Bootstrap"></a>5.Bootstrap</h2><p>Bootstrap 是最受欢迎的 HTML、CSS 和 JS 框架，用于开发响应式布局、移动设备优先的 WEB 项目。</p><p><a href="https://v3.bootcss.com/" target="_blank">Bootstrap</a></p><hr><h2 id="6-Layui"><a href="#6-Layui" class="headerlink" title="6.Layui"></a>6.Layui</h2><p>经典模块化前端框架</p><p>由职业前端倾情打造，面向全层次的前后端开发者，低门槛开箱即用的前端 UI 解决方案。</p><p><a href="https://www.layui.com/" target="_blank">Layui</a></p><hr><h2 id="7-Ant-Design-UI"><a href="#7-Ant-Design-UI" class="headerlink" title="7.Ant Design UI"></a>7.Ant Design UI</h2><p>主要用于研发企业级中后台产品。</p><p><a href="https://ant.design/index-cn" target="_blank">Ant Design</a></p><hr><h2 id="8-Element-UI"><a href="#8-Element-UI" class="headerlink" title="8.Element UI"></a>8.Element UI</h2><p>Element，一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库</p><p><a href="https://element.eleme.cn/#/zh-CN" target="_blank">Element UI</a></p><hr><h2 id="9-Lin-UI"><a href="#9-Lin-UI" class="headerlink" title="9.Lin UI"></a>9.Lin UI</h2><p>Lin UI 是基于 微信小程序原生语法 实现的组件库。遵循简洁，易用的设计规范。</p><p><a href="http://doc.mini.7yue.pro/" target="_blank">Lin UI</a></p><hr><h2 id="10-uni-app"><a href="#10-uni-app" class="headerlink" title="10.uni-app"></a>10.uni-app</h2><p>uni-app 是一个使用 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、H5、以及各种小程序（微信/支付宝/百度/头条/QQ/钉钉）等多个平台。</p><p><a href="https://uniapp.dcloud.io/" target="_blank">uni-app</a></p><hr><h2 id="11-Taro-UI"><a href="#11-Taro-UI" class="headerlink" title="11.Taro UI"></a>11.Taro UI</h2><p>Taro UI 一套基于 Taro 框架开发的多端 UI 组件库</p><p><a href="https://taro-ui.jd.com/#/" target="_blank"> Taro UI</a></p><hr><h2 id="12-Weex"><a href="#12-Weex" class="headerlink" title="12.Weex"></a>12.Weex</h2><p>Weex 是一个可以使用现代化的 Web 技术开发高性能原生应用的框架。</p><p><a href="https://weex.apache.org/zh/" target="_blank">Weex</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序开发遇到的那些坑</title>
      <link href="2019/09/05/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9D%91/"/>
      <url>2019/09/05/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><h1 id="微信小程序开发遇到的那些坑"><a href="#微信小程序开发遇到的那些坑" class="headerlink" title="微信小程序开发遇到的那些坑"></a>微信小程序开发遇到的那些坑</h1><h2 id="一、Webview-内嵌-H5-页面不可以使用微信支付"><a href="#一、Webview-内嵌-H5-页面不可以使用微信支付" class="headerlink" title="一、Webview 内嵌 H5 页面不可以使用微信支付"></a>一、Webview 内嵌 H5 页面不可以使用微信支付</h2><p>小程序的 web-view 不支持微信支付，只能通过跳回小程序调用小程序支付的 API。实现大体思路：在 H5 页面获取支付参数，然后判断是否在小程序环境中，如果在，获取到支付参数后返回到小程序并将支付参数传给小程序，小程序调用 wx.requestPayment(OBJECT)接口完成支付，需要注意的是，获取支付参数的 appId 为小程序的 appId.下面是解决方案：</p><ul><li>在 H5 页面引入 JSSDK 1.3.2,判断小程序环境，获取支付参数，将支付参数返回给小程序，这里需要注意的是“package”参数，因为其包含“=”，因此传的时候注意使用 encodeURIComponent 编码，获取后 decodeURIComponent 解码</li><li>在小程序新建一个空白 page,在 onLoad 中获取参数，获取成功后发起微信支付请求</li><li>支付完成，处理相关逻辑</li></ul><h2 id="二、小程序获取不到-unionId"><a href="#二、小程序获取不到-unionId" class="headerlink" title="二、小程序获取不到 unionId"></a>二、小程序获取不到 unionId</h2><p>在小程序发布到线上之后发现有些新用户在登录页面卡死，最后发现是没有获取到 unionId,为什么获取不到 unionId 呢，看下微信对 UnionId 机制的原文解释：<br>如果开发者拥有多个移动应用、网站应用、和公众帐号（包括小程序），可通过 unionid 来区分用户的唯一性，因为只要是同一个微信开放平台帐号下的移动应用、网站应用和公众帐号（包括小程序），用户的 unionid 是唯一的。换句话说，同一用户，对同一个微信开放平台下的不同应用，unionid 是相同的。</p><p>同一个微信开放平台下的相同主体的 App、公众号、小程序，如果用户已经关注公众号，或者曾经登录过 App 或公众号，则用户打开小程序时，开发者可以直接通过 wx.login 获取到该用户 UnionID，无须用户再次授权。</p><p><strong>注意： 后边这句话的描述</strong></p><p>用户关注过公众号，或者曾经登录过 App 或公众号，则用户打开小程序时，开发者可以直接通过 wx.login 获取到该用户 UnionID<br><strong>即：如果用户没有关注过公众号，或者没有登陆过 App，通过 wx.login 是无法获取到该用户 UnionID，只能通过 wx.getUserInfo 来获取 UnionId</strong><br>经验证，系统不存在 UnionId 的小程序用户都是没有关注公众号或未在 App 中使用微信授权的用户<br>解决方案：<br>获取小程序 UnionId 获取不到时，wx.getUserInfo 可以获取敏感数据，其中包含 UnionId 字段。</p><h2 id="三、扫普通链接二维码打开小程序"><a href="#三、扫普通链接二维码打开小程序" class="headerlink" title="三、扫普通链接二维码打开小程序"></a>三、扫普通链接二维码打开小程序</h2><p>（使用该功能，小程序必须已经是已发布状态）小程序提供了扫描普通二维码跳转小程序的功能，首先在微信公众平台配置二维码规则，域名路径必须是校验文件所在路径，可以配置测试链接进行测试，可以配置最多 5 个测试链接，可以指定测试链接打开的测试范围（开发、测试、正式），必须是具有体验权限的用户才可以进行测试，非体验用户进入正式版本。规则发布后，配置符合规则的链接均可进入到小程序。</p><h2 id="四、可拖拽元素遇上-canvas-二维码"><a href="#四、可拖拽元素遇上-canvas-二维码" class="headerlink" title="四、可拖拽元素遇上 canvas 二维码"></a>四、可拖拽元素遇上 canvas 二维码</h2><p>刚开始做这个可拖拽元素的时候，是准备将其做成一个组件，在每个需要的地方引入即可，但是有一个很大的问题就是所在页面有一个 canvas 生成的二维码，原生组件在小程序中的层级是最高的，即不管怎么布局或者给 z-index 都是不生效的，所以拖拽元素拖拽过程中会在二维码下面。</p><p>解决这个问题的过程中遇到了很多坑，首先想到的是小程序中有没有直接生成二维码图片的插件，有是有，但是我的字符串太长了，生成的 base64 编码均太长了，所以我还是用的 weapp-qrcode.js 插件，这个插件自带导出图片的方法，用的就是 wx.canvasToTempFilePath 将画布导出生成图片，页面上 canvas 所在位置放置一个 image 组件，将 canvas 移到可视区域外面，但是生成的图片一直是乱的，原来是我没给 canvas 样式的高度和宽度导致生成出现问题，但是这样还是在一些安卓机上出现问题，调用 wx.canvasToTempFilePath 已经是在 draw 回调之后了，但是还是需要给延时才可以，在这里我给的 500ms,基本上就可以了。</p><p>原生组件层级最高的问题解决了，但是又出现一个问题，就是可拖拽元素是一个组件，所在页面又有很多按钮，如果直接将可拖拽组件的层级设置最高，那么按钮就不可点击，如果不设置最高，那么就不可拖拽了，有两种方式可以解决，一种是将按钮以插槽的方式放在组件中，另一种是不将拖拽元素写成组件，之间将 movable-area 放在 wxml 的最外层，我采用的是第二种，如果每个按钮都写成插槽的话维护起来太麻烦了。</p><h2 id="五、微信小程序缓存——-缓存时效性"><a href="#五、微信小程序缓存——-缓存时效性" class="headerlink" title="五、微信小程序缓存——-缓存时效性"></a>五、微信小程序缓存——-缓存时效性</h2><pre><code>/** * 数据缓存没有设置有效期 */class Storage &#123;  /**   * 获取缓存   * @param String $key  key   * @param String $def  若想要无缓存时，返回默认值则get(&#39;key&#39;,&#39;默认值&#39;)（支持字符串、json、数组、boolean等等）   * @return value;   */  get(key, def = &#39;&#39;) &#123;    const timeout = parseInt(wx.getStorageSync(`$&#123;key&#125;__separator__`) || 0);    // 过期失效    if (timeout) &#123;      if (Date.now() &gt; timeout) &#123;        this.remove(key);        return;      &#125;    &#125;    let value = wx.getStorageSync(key);    return value ? value : def;  &#125;  /**   * 设置缓存   * @param String $key       key   * @param String $value     value（支持字符串、json、数组、boolean等等）   * @param Number $timeout   过期时间（单位：分钟）不设置时间即为永久保存   * @return value;   */  put(key, value, timeout = 0) &#123;    let _timeout = parseInt(timeout);    wx.setStorageSync(key, value);    if (_timeout) &#123;      wx.setStorageSync(`$&#123;key&#125;__separator__`, Date.now() + 1000 * 60 * _timeout);    &#125; else &#123;      wx.removeStorageSync(`$&#123;key&#125;__separator__`);    &#125;    return value;  &#125;  remove(key) &#123;    wx.removeStorageSync(key);    wx.removeStorageSync(`$&#123;key&#125;__separator__`);    return undefined;  &#125;&#125;export &#123;  Storage&#125;</code></pre><h2 id="六、小程序跳转另小程序遇到的坑（监听返回）"><a href="#六、小程序跳转另小程序遇到的坑（监听返回）" class="headerlink" title="六、小程序跳转另小程序遇到的坑（监听返回）"></a>六、小程序跳转另小程序遇到的坑（监听返回）</h2><p>场景：在跳转另一个小程序之前需要调用接口获取跳转所需参数，在另一个小程序返回时需要重新调用接口或许参数。</p><p>问题：首先想到的是点击跳转的时候调用接口，之后 wx.navigateToMiniProgram 跳转，将接口返回数据携带上，但是，这种不是用户直接触发的跳转，微信不支持。</p><p>然后，那就先在页面的 onload 事件中直接调用一次，然后再监听另一个小程序返回，再调用一次接口，文档上写的很明白，监听 App.onShow 就好了，于是我在该页面的 onshow 直接 wx.onAppShow 监听场景值为 1038，但是！！！这里遇到了巨坑，第一次返回，wx.onAppShow 调用一次，第二次返回，wx.onAppShow 调用两次，第三次返回，wx.onAppShow 调用三次，直接导致整个流程出问题了。</p><p>解决：思考了好久，决定不用 wx.onAppShow 监听场景值的办法，直接在该页面直接定义一个变量，比如 navigateToOther,默认为 false,跳转成功后置为 true，然后在 onshow 里判断是否为 true，如果为 true，调用接口，将 navigateToOther 置为 false。完美解决！</p><h2 id="七、小程序-H5-页面分享"><a href="#七、小程序-H5-页面分享" class="headerlink" title="七、小程序 H5 页面分享"></a>七、小程序 H5 页面分享</h2><p>H5 页面中的分享转发按钮不能直接分享给好友，只能用折中的方式来做，点击 H5 页面的分享按钮时，弹出提示框，指向右上角的转发按钮，并通过 wx.miniProgram.postMessage 将所需信息发送给小程序，用户点击转发按钮时可以通过 bindmessage 接收到消息。</p><h2 id="八、webview-刷新"><a href="#八、webview-刷新" class="headerlink" title="八、webview 刷新"></a>八、webview 刷新</h2><p>小程序嵌套 H5 页面时，有时页面在来回切换时需要刷新该 H5 页面，但是微信未提供相关接口，但是可以通过折中的方式来实现。</p><p>首先，让 webview 做条件渲染：</p><pre><code>&lt;web-view wx:if=&quot;&#123;&#123;url&#125;&#125;&quot; src=&quot;&#123;&#123;url&#125;&#125;&quot; /&gt;  data: &#123;    base_url: config.kalatong_base_url + &#39;……&#39;,    url: &#39;&#39;  &#125;,  /**   * 生命周期函数--监听页面加载   */  onLoad: function(options) &#123;    let url = this.data.base_url + &quot;#wechat_redirect&quot;    this.data.url = decodeURIComponent(url)  &#125;,  /**   * 生命周期函数--监听页面显示   */  onShow: function() &#123;    this.refreshWebview()  &#125;,</code></pre><p>需要刷新时，先把 url 设为空，销毁当前 webview。然后再把 url 设为当前值。如下：</p><pre><code>refreshWebview: function () &#123;    let tmpUrl = this.data.url;    this.setData(&#123;      url: &#39;&#39;    &#125;);    setTimeout(() =&gt; &#123;      this.setData(&#123;        url: tmpUrl      &#125;)    &#125;, 500);  &#125;</code></pre><p>这样便可以在不影响导航栏历史的情况下刷新页面，也可以是跳转 url。</p><p>这里 setData 之后，页面内容的更新应该是异步执行的，因此我们后一次修改 url 需要延时一小段时间，否则会出现 error。</p><p>猜测 setData 后页面实际更新应该是在下一次的 requestAnimationFrame，因此如果页面完全不卡顿可能 16ms 就可以了，保险起见，我设了 100ms。<br>但是 100ms 也不保险，有些页面会空白，最后置成 500ms。</p>]]></content>
      
      
      <categories>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>端口占用</title>
      <link href="2019/09/05/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/"/>
      <url>2019/09/05/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo]</p><h1 id="端口占用"><a href="#端口占用" class="headerlink" title="端口占用"></a>端口占用</h1><p>在java或者其他服务器语言开发时，经常端口占用，显示下面的错误：</p><blockquote><p>The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in &gt;use or the connector may be misconfigured</p></blockquote><p>springboot 8080端口被占用报错：The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured</p><p>cmd打开命令提示符，输入如下命令</p><pre><code>netstat -aon|findstr 8080</code></pre><p>查询出<br><img src="http://q8s2pu3ll.bkt.clouddn.com/duankouzhanyong-1.png?e=1586871413&token=voGbpLBJSZOJRRtvMG9WA4cNlqdXthz-bNgDcMxe:IQOpbbwiWy-90g0muWlKqrNI2b8=&attname=" width="100%"></p><p>再输入</p><pre><code>taskkill /f /t /im 9260</code></pre><img src="http://q8s2pu3ll.bkt.clouddn.com/duankouzhanyong-2.png?e=1586871413&token=voGbpLBJSZOJRRtvMG9WA4cNlqdXthz-bNgDcMxe:JKKI_aDHkrHWKLgHRPremZ9zokc=&attname=" width="100%"><p>成功解决</p>]]></content>
      
      
      <categories>
          
          <category> Win </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Win </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
